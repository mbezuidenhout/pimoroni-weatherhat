export const I2C_ADDR = 0x18;
export const CHIP_ID = 0x6AE2;
export const CHIP_VERSION = 2;
export const REG_CHIP_ID_L = 0xFA;
export const REG_CHIP_ID_H = 0xFB;
export const REG_VERSION = 0xFC;

// Rotary encoder
export const REG_ENC_EN = 0x04
export const BIT_ENC_EN_1 = 0
export const BIT_ENC_MICROSTEP_1 = 1
export const BIT_ENC_EN_2 = 2
export const BIT_ENC_MICROSTEP_2 = 3
export const BIT_ENC_EN_3 = 4
export const BIT_ENC_MICROSTEP_3 = 5
export const BIT_ENC_EN_4 = 6
export const BIT_ENC_MICROSTEP_4 = 7
export const REG_ENC_1_CFG = 0x05
export const REG_ENC_1_COUNT = 0x06
export const REG_ENC_2_CFG = 0x07
export const REG_ENC_2_COUNT = 0x08
export const REG_ENC_3_CFG = 0x09
export const REG_ENC_3_COUNT = 0x0A
export const REG_ENC_4_CFG = 0x0B
export const REG_ENC_4_COUNT = 0x0C

// Cap touch
export const REG_CAPTOUCH_EN = 0x0D
export const REG_CAPTOUCH_CFG = 0x0E
export const REG_CAPTOUCH_0 = 0x0F  // First of 8 bytes from 15-22

// Switch counters
export const REG_SWITCH_EN_P0 = 0x17
export const REG_SWITCH_EN_P1 = 0x18
export const REG_SWITCH_P00 = 0x19  // First of 8 bytes from 25-40
export const REG_SWITCH_P10 = 0x21  // First of 8 bytes from 33-49
export const REG_USER_FLASH = 0xD0
export const REG_FLASH_PAGE = 0xF0
export const REG_DEBUG = 0xF8
export const REG_P0 = 0x40       // protect_bits 2 # Bit addressing
export const REG_SP = 0x41       // Read only
export const REG_DPL = 0x42      // Read only
export const REG_DPH = 0x43      // Read only
export const REG_RCTRIM0 = 0x44  // Read only
export const REG_RCTRIM1 = 0x45  // Read only
export const REG_RWK = 0x46
export const REG_PCON = 0x47     // Read only
export const REG_TCON = 0x48
export const REG_TMOD = 0x49
export const REG_TL0 = 0x4A
export const REG_TL1 = 0x4B
export const REG_TH0 = 0x4C
export const REG_TH1 = 0x4D
export const REG_CKCON = 0x4E
export const REG_WKCON = 0x4F    // Read only
export const REG_P1 = 0x50       // protect_bits 3 6 # Bit addressing
export const REG_SFRS = 0x51     // TA protected # Read only
export const REG_CAPCON0 = 0x52
export const REG_CAPCON1 = 0x53
export const REG_CAPCON2 = 0x54
export const REG_CKDIV = 0x55
export const REG_CKSWT = 0x56    // TA protected # Read only
export const REG_CKEN = 0x57     // TA protected # Read only
export const REG_SCON = 0x58
export const REG_SBUF = 0x59
export const REG_SBUF_1 = 0x5A
export const REG_EIE = 0x5B      // Read only
export const REG_EIE1 = 0x5C     // Read only
export const REG_CHPCON = 0x5F   // TA protected # Read only
export const REG_P2 = 0x60       // Bit addressing
export const REG_AUXR1 = 0x62
export const REG_BODCON0 = 0x63  // TA protected
export const REG_IAPTRG = 0x64   // TA protected # Read only
export const REG_IAPUEN = 0x65   // TA protected # Read only
export const REG_IAPAL = 0x66    // Read only
export const REG_IAPAH = 0x67    // Read only
export const REG_IE = 0x68       // Read only
export const REG_SADDR = 0x69
export const REG_WDCON = 0x6A    // TA protected
export const REG_BODCON1 = 0x6B  // TA protected
export const REG_P3M1 = 0x6C
export const REG_P3S = 0xC0      // Page 1 # Reassigned from 0x6c to avoid collision
export const REG_P3M2 = 0x6D
export const REG_P3SR = 0xC1     // Page 1 # Reassigned from 0x6d to avoid collision
export const REG_IAPFD = 0x6E    // Read only
export const REG_IAPCN = 0x6F    // Read only
export const REG_P3 = 0x70       // Bit addressing
export const REG_P0M1 = 0x71     // protect_bits  2
export const REG_P0S = 0xC2      // Page 1 # Reassigned from 0x71 to avoid collision
export const REG_P0M2 = 0x72     // protect_bits  2
export const REG_P0SR = 0xC3     // Page 1 # Reassigned from 0x72 to avoid collision
export const REG_P1M1 = 0x73     // protect_bits  3 6
export const REG_P1S = 0xC4      // Page 1 # Reassigned from 0x73 to avoid collision
export const REG_P1M2 = 0x74     // protect_bits  3 6
export const REG_P1SR = 0xC5     // Page 1 # Reassigned from 0x74 to avoid collision
export const REG_P2S = 0x75
export const REG_IPH = 0x77      // Read only
export const REG_PWMINTC = 0xC6  // Page 1 # Read only # Reassigned from 0x77 to avoid collision
export const REG_IP = 0x78       // Read only
export const REG_SADEN = 0x79
export const REG_SADEN_1 = 0x7A
export const REG_SADDR_1 = 0x7B
export const REG_I2DAT = 0x7C    // Read only
export const REG_I2STAT = 0x7D   // Read only
export const REG_I2CLK = 0x7E    // Read only
export const REG_I2TOC = 0x7F    // Read only
export const REG_I2CON = 0x80    // Read only
export const REG_I2ADDR = 0x81   // Read only
export const REG_ADCRL = 0x82
export const REG_ADCRH = 0x83
export const REG_T3CON = 0x84
export const REG_PWM4H = 0xC7    // Page 1 # Reassigned from 0x84 to avoid collision
export const REG_RL3 = 0x85
export const REG_PWM5H = 0xC8    // Page 1 # Reassigned from 0x85 to avoid collision
export const REG_RH3 = 0x86
export const REG_PIOCON1 = 0xC9  // Page 1 # Reassigned from 0x86 to avoid collision
export const REG_TA = 0x87       // Read only
export const REG_T2CON = 0x88
export const REG_T2MOD = 0x89
export const REG_RCMP2L = 0x8A
export const REG_RCMP2H = 0x8B
export const REG_TL2 = 0x8C
export const REG_PWM4L = 0xCA    // Page 1 # Reassigned from 0x8c to avoid collision
export const REG_TH2 = 0x8D
export const REG_PWM5L = 0xCB    // Page 1 # Reassigned from 0x8d to avoid collision
export const REG_ADCMPL = 0x8E
export const REG_ADCMPH = 0x8F
export const REG_PSW = 0x90      // Read only
export const REG_PWMPH = 0x91
export const REG_PWM0H = 0x92
export const REG_PWM1H = 0x93
export const REG_PWM2H = 0x94
export const REG_PWM3H = 0x95
export const REG_PNP = 0x96
export const REG_FBD = 0x97
export const REG_PWMCON0 = 0x98
export const REG_PWMPL = 0x99
export const REG_PWM0L = 0x9A
export const REG_PWM1L = 0x9B
export const REG_PWM2L = 0x9C
export const REG_PWM3L = 0x9D
export const REG_PIOCON0 = 0x9E
export const REG_PWMCON1 = 0x9F
export const REG_ACC = 0xA0      // Read only
export const REG_ADCCON1 = 0xA1
export const REG_ADCCON2 = 0xA2
export const REG_ADCDLY = 0xA3
export const REG_C0L = 0xA4
export const REG_C0H = 0xA5
export const REG_C1L = 0xA6
export const REG_C1H = 0xA7
export const REG_ADCCON0 = 0xA8
export const REG_PICON = 0xA9    // Read only
export const REG_PINEN = 0xAA    // Read only
export const REG_PIPEN = 0xAB    // Read only
export const REG_PIF = 0xAC      // Read only
export const REG_C2L = 0xAD
export const REG_C2H = 0xAE
export const REG_EIP = 0xAF      // Read only
export const REG_B = 0xB0        // Read only
export const REG_CAPCON3 = 0xB1
export const REG_CAPCON4 = 0xB2
export const REG_SPCR = 0xB3
export const REG_SPCR2 = 0xCC    // Page 1 # Reassigned from 0xb3 to avoid collision
export const REG_SPSR = 0xB4
export const REG_SPDR = 0xB5
export const REG_AINDIDS0 = 0xB6
export const REG_AINDIDS1 = null  // Added to have common code with SuperIO
export const REG_EIPH = 0xB7     // Read only
export const REG_SCON_1 = 0xB8
export const REG_PDTEN = 0xB9    // TA protected
export const REG_PDTCNT = 0xBA   // TA protected
export const REG_PMEN = 0xBB
export const REG_PMD = 0xBC
export const REG_EIP1 = 0xBE     // Read only
export const REG_EIPH1 = 0xBF    // Read only
export const REG_INT = 0xF9
export const MASK_INT_TRIG = 0x1
export const MASK_INT_OUT = 0x2
export const BIT_INT_TRIGD = 0
export const BIT_INT_OUT_EN = 1
export const BIT_INT_PIN_SWAP = 2  // 0 = P1.3, 1 = P0.0
export const REG_INT_MASK_P0 = 0x00
export const REG_INT_MASK_P1 = 0x01
export const REG_INT_MASK_P3 = 0x03
export const REG_ADDR = 0xFD
export const REG_CTRL = 0xFE     // 0 = Sleep, 1 = Reset, 2 = Read Flash, 3 = Write Flash, 4 = Addr Unlock
export const MASK_CTRL_SLEEP = 0x1
export const MASK_CTRL_RESET = 0x2
export const MASK_CTRL_FREAD = 0x4
export const MASK_CTRL_FWRITE = 0x8
export const MASK_CTRL_ADDRWR = 0x10

// Special mode registers, use a bit-addressing scheme to avoid
// writing the *whole* port and smashing the i2c pins
export const BIT_ADDRESSED_REGS = [REG_P0, REG_P1, REG_P2, REG_P3]
